class Solution {
public:
    static bool cmp (vector<int> a, vector<int> b)
    {
        return a[0]<b[0] || ( a[0]==b[0]&&a[1]<b[1]);
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> res;
        sort(intervals.begin(),intervals.end(),cmp);
        int len = intervals.size();
        if(len<2)
            return intervals;
        int start =intervals[0][0];        
        int end =intervals[0][1];        
        for(int i=1;i<len;i++)
        {
            if(intervals[i][0]>end)
            {
                res.push_back(vector<int> {start,end});
                start = intervals[i][0];
                end=intervals[i][1];
            }
            else if(intervals[i][0]<=end)
            {
                end=max(end, intervals[i][1]);
            }
        }
        res.push_back(vector<int> {start,end});
        return res;        
    }
};
