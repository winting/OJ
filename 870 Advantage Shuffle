class Solution {
public:
    vector<int> advantageCount(vector<int>& A, vector<int>& B) {
        int len=A.size();
        if(len<=1)
            return A;
        sort(A.begin(),A.end());
        vector<int> C(B.begin(), B.end());
        sort(C.begin(),C.end());
        map<int,vector<int>> dict;
        int start=0;
        int end=len-1;
        for(int i=0;i<len;i++){
            if(C[start]<A[i])
            {
                auto iter=dict.find(C[start]);
                if(iter==dict.end())
                {
                    dict.insert(make_pair(C[start], vector<int> {A[i]}));
                }else
                    (iter->second).push_back(A[i]);
                start++;
            }else
            {
                auto iter=dict.find(C[end]);
                if(iter==dict.end())
                {
                    dict.insert(make_pair(C[end], vector<int> {A[i]}));
                }else
                    (iter->second).push_back(A[i]);
                end--;
            }
        }
        
        for(int i=0;i<len;i++)
        {
            auto iter=dict.find(B[i]);
            if((iter->second).size()==1)
            {
                B[i]=(iter->second)[0];
                dict.erase(iter);
            }else
            {
                B[i]=(iter->second)[0];
                (iter->second).erase((iter->second).begin());
            }
        }
        return B;
    }
};
