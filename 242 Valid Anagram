Given two strings s and t , write a function to determine if t is an anagram of s.

Example 1:

Input: s = "anagram", t = "nagaram"
Output: true
Example 2:

Input: s = "rat", t = "car"
Output: false
Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?

法1：排序比较
class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size())
            return false;
        sort(s.begin(),s.end());
        sort(t.begin(),t.end());
        return s==t;
    }
};

法2：用fixed array
class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size())
            return false;
        int dict[26] ={0};
        for(int i=0;i<s.size();i++)
        {
            dict[s[i]-'a']++;
        }
        for(int i=0;i<t.size();i++)
        {
            if(dict[t[i]-'a']==0)
                return false;
            dict[t[i]-'a']--;
        }
        return true;
    }
};
